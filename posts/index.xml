<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Post on digitsensitive</title><link>https://digitsensitive.github.io/posts/</link><description>Recent content in Post on digitsensitive</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Dec 2020 07:41:10 +0200</lastBuildDate><atom:link href="https://digitsensitive.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>A Compact Scene Manager for TIC-80</title><link>https://digitsensitive.github.io/posts/tic80-compact-scene-manager/</link><pubDate>Tue, 03 Sep 2024 14:30:00 +0200</pubDate><guid>https://digitsensitive.github.io/posts/tic80-compact-scene-manager/</guid><description>In this post, I&amp;rsquo;ll show you how to write a compact scene manager for your TIC-80 games. Feel free to check out the code and let me know if you have any suggestions for further optimization!
You can play the TIC-80 cart online here: Play TIC-80 Cart
Code in Lua -- scene manager function sceneManager() return { scenes = {}, curr = nil, register = function(self, s, n) self.scenes[n] = s end, switch = function(self, n) self.</description></item><item><title>Your start with CMake: As simple as it can get</title><link>https://digitsensitive.github.io/posts/cmake-starter/</link><pubDate>Tue, 31 Jan 2023 11:00:00 +0100</pubDate><guid>https://digitsensitive.github.io/posts/cmake-starter/</guid><description>When I recently started to work with CMake for a C++ project, I did find it challenging to get started with. The documentation is comprehensive but can be overwhelming. There are of course multiple helpful articles and tutorials around, but I was already struggling with the simplest commands.
This article is mainly for the people, who use CMake for the first time. I will try to use as less words and to be as clear as possible.</description></item><item><title>Print String in Commodore 64 Assembly Language</title><link>https://digitsensitive.github.io/posts/c64-print/</link><pubDate>Tue, 27 Dec 2022 11:00:00 +0100</pubDate><guid>https://digitsensitive.github.io/posts/c64-print/</guid><description>When the THEC64 from Retro Games was released at the end of December 2019, I was able to spend some time making up for lost time with the so-called &amp;ldquo;breadbox&amp;rdquo;.
With a lot of interest I read through the official Commodore 64 User&amp;rsquo;s Guide and learnd some BASIC, the onboard programming language. In the last two years I have been playing with the C64 on and off and have also been looking into the 6502 assembly programming language.</description></item><item><title>The Point-In-Polygon Problem</title><link>https://digitsensitive.github.io/posts/point-in-polygon/</link><pubDate>Tue, 18 Oct 2022 11:00:00 +0100</pubDate><guid>https://digitsensitive.github.io/posts/point-in-polygon/</guid><description>In this article we want to explore the point-in-polygon (PIP) problem. The problem raises the question whether a given point in the plane lies inside, outside or on the boundary of a polygon. This is in particular a basic operation in computer graphics.
The article cannot be considered as a fully comprehensive coverage of every aspect of the problem. Errors cannot be excluded. Corrections or additions are always desired and welcome.</description></item><item><title>Learn to create a HTML5 Game in 5 Minutes</title><link>https://digitsensitive.github.io/posts/html5-game-in-five-minutes/</link><pubDate>Sat, 09 Feb 2019 00:12:00 +0100</pubDate><guid>https://digitsensitive.github.io/posts/html5-game-in-five-minutes/</guid><description>Building Games with HTML5 and JavaScript has gained a lot of popularity in recent years and many Game Engines / Frameworks (List) were created.
In this article, I will show you how to build a flappy bird clone with the free and powerful Game Framework Phaser 3 in TypeScript (will compile to plain JavaScript).
Step 1: Prerequisites To access the source code on github, download and install git from here. You also need node.</description></item></channel></rss>