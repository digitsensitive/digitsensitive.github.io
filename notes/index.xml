<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on digitsensitive</title><link>https://digitsensitive.github.io/notes/</link><description>Recent content in Notes on digitsensitive</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 10 Jul 2022 07:41:10 +0200</lastBuildDate><atom:link href="https://digitsensitive.github.io/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Geometry</title><link>https://digitsensitive.github.io/notes/geometry/</link><pubDate>Sat, 12 Nov 2022 07:41:10 +0200</pubDate><guid>https://digitsensitive.github.io/notes/geometry/</guid><description>Basic Vector Operations Magnitude The magnitude or length of a vector is calculated by multiplying each component by itself, summing all together, and then taking the square root. It is basically the Pythagorean theorem in n dimensions.
// Example for a Vec2D a(x,y); float x = 4.0f; float y = 2.0f; float length = sqrt(a.x * a.x + a.y * a.y); printf(&amp;#34;The length of vector a is: %f.\n&amp;#34;, length); // Output: The length of my_vector is: 4.</description></item><item><title>TIC-80</title><link>https://digitsensitive.github.io/notes/tic80/</link><pubDate>Tue, 18 Oct 2022 14:00:00 +0100</pubDate><guid>https://digitsensitive.github.io/notes/tic80/</guid><description>Basic setup function init() end init() function TIC() -- here lies our game loop end Game loop function TIC() global.time=global.time+1 input() if global.time%global.updateSpeed==0 then update() end draw() end General helper functions function cos(x) return math.cos(x) end function sin(x) return math.sin(x) end function tan(x) return math.tan(x) end function rnd(x,y) return math.random(x,y) end function rndArray(a) return a[math.random(#a)] end function ins(t,e) return table.insert(t,e) end function rmv(t,e) return table.remove(t,e) end -- get maximum of two numbers function max(n1,n2) return math.</description></item><item><title>Lua</title><link>https://digitsensitive.github.io/notes/lua/</link><pubDate>Sun, 10 Jul 2022 07:41:10 +0200</pubDate><guid>https://digitsensitive.github.io/notes/lua/</guid><description>Comments -- simple one liner --[[ multiline comment ]] Variables In lua every variable is by default global, which is a historical decision. Nowadays this is considered bad practice (f.e. in moonscript everything is by default local).
In general you should always use local. Same goes for functions, which you can also declare as local.
local x = 4 y,z = 4,9 Operators Relational operators -- equal to == -- not equal to ~= -- greater than &amp;gt; -- less than &amp;lt; -- greater than or equal to &amp;gt;= -- less than or equal to &amp;lt;= Arithmetic operators -- Addition + -- Subtraction - -- Multiplication * -- Division / -- Modulus % -- Exponent -- Use the built-in `^` operator rather than the `math.</description></item></channel></rss>